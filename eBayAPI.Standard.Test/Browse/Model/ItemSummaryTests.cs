/* 
 * Browse API
 *
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, product, or item aspects and refine the results by using filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size. This resource also provides a bridge between the eBay legacy APIs, such as Trading and Finding, and the RESTful APIs, such as Browse, which use different formats for the item IDs. You can use the Browse API to retrieve the basic details of the item and the RESTful item ID using a legacy item ID.
 *
 * OpenAPI spec version: v1_beta.12.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ItemSummary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ItemSummaryTests
    {
        // TODO uncomment below to declare an instance variable for ItemSummary
        //private ItemSummary instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ItemSummary
            //instance = new ItemSummary();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ItemSummary
        /// </summary>
        [Test]
        public void ItemSummaryInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ItemSummary
            //Assert.IsInstanceOfType<ItemSummary> (instance, "variable 'instance' is a ItemSummary");
        }


        /// <summary>
        /// Test the property 'AdditionalImages'
        /// </summary>
        [Test]
        public void AdditionalImagesTest()
        {
            // TODO unit test for the property 'AdditionalImages'
        }
        /// <summary>
        /// Test the property 'AdultOnly'
        /// </summary>
        [Test]
        public void AdultOnlyTest()
        {
            // TODO unit test for the property 'AdultOnly'
        }
        /// <summary>
        /// Test the property 'BidCount'
        /// </summary>
        [Test]
        public void BidCountTest()
        {
            // TODO unit test for the property 'BidCount'
        }
        /// <summary>
        /// Test the property 'BuyingOptions'
        /// </summary>
        [Test]
        public void BuyingOptionsTest()
        {
            // TODO unit test for the property 'BuyingOptions'
        }
        /// <summary>
        /// Test the property 'Categories'
        /// </summary>
        [Test]
        public void CategoriesTest()
        {
            // TODO unit test for the property 'Categories'
        }
        /// <summary>
        /// Test the property 'Condition'
        /// </summary>
        [Test]
        public void ConditionTest()
        {
            // TODO unit test for the property 'Condition'
        }
        /// <summary>
        /// Test the property 'ConditionId'
        /// </summary>
        [Test]
        public void ConditionIdTest()
        {
            // TODO unit test for the property 'ConditionId'
        }
        /// <summary>
        /// Test the property 'CurrentBidPrice'
        /// </summary>
        [Test]
        public void CurrentBidPriceTest()
        {
            // TODO unit test for the property 'CurrentBidPrice'
        }
        /// <summary>
        /// Test the property 'DistanceFromPickupLocation'
        /// </summary>
        [Test]
        public void DistanceFromPickupLocationTest()
        {
            // TODO unit test for the property 'DistanceFromPickupLocation'
        }
        /// <summary>
        /// Test the property 'EnergyEfficiencyClass'
        /// </summary>
        [Test]
        public void EnergyEfficiencyClassTest()
        {
            // TODO unit test for the property 'EnergyEfficiencyClass'
        }
        /// <summary>
        /// Test the property 'Epid'
        /// </summary>
        [Test]
        public void EpidTest()
        {
            // TODO unit test for the property 'Epid'
        }
        /// <summary>
        /// Test the property 'Image'
        /// </summary>
        [Test]
        public void ImageTest()
        {
            // TODO unit test for the property 'Image'
        }
        /// <summary>
        /// Test the property 'ItemAffiliateWebUrl'
        /// </summary>
        [Test]
        public void ItemAffiliateWebUrlTest()
        {
            // TODO unit test for the property 'ItemAffiliateWebUrl'
        }
        /// <summary>
        /// Test the property 'ItemGroupHref'
        /// </summary>
        [Test]
        public void ItemGroupHrefTest()
        {
            // TODO unit test for the property 'ItemGroupHref'
        }
        /// <summary>
        /// Test the property 'ItemGroupType'
        /// </summary>
        [Test]
        public void ItemGroupTypeTest()
        {
            // TODO unit test for the property 'ItemGroupType'
        }
        /// <summary>
        /// Test the property 'ItemHref'
        /// </summary>
        [Test]
        public void ItemHrefTest()
        {
            // TODO unit test for the property 'ItemHref'
        }
        /// <summary>
        /// Test the property 'ItemId'
        /// </summary>
        [Test]
        public void ItemIdTest()
        {
            // TODO unit test for the property 'ItemId'
        }
        /// <summary>
        /// Test the property 'ItemLocation'
        /// </summary>
        [Test]
        public void ItemLocationTest()
        {
            // TODO unit test for the property 'ItemLocation'
        }
        /// <summary>
        /// Test the property 'ItemWebUrl'
        /// </summary>
        [Test]
        public void ItemWebUrlTest()
        {
            // TODO unit test for the property 'ItemWebUrl'
        }
        /// <summary>
        /// Test the property 'MarketingPrice'
        /// </summary>
        [Test]
        public void MarketingPriceTest()
        {
            // TODO unit test for the property 'MarketingPrice'
        }
        /// <summary>
        /// Test the property 'PickupOptions'
        /// </summary>
        [Test]
        public void PickupOptionsTest()
        {
            // TODO unit test for the property 'PickupOptions'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Test]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'Seller'
        /// </summary>
        [Test]
        public void SellerTest()
        {
            // TODO unit test for the property 'Seller'
        }
        /// <summary>
        /// Test the property 'ShippingOptions'
        /// </summary>
        [Test]
        public void ShippingOptionsTest()
        {
            // TODO unit test for the property 'ShippingOptions'
        }
        /// <summary>
        /// Test the property 'ShortDescription'
        /// </summary>
        [Test]
        public void ShortDescriptionTest()
        {
            // TODO unit test for the property 'ShortDescription'
        }
        /// <summary>
        /// Test the property 'ThumbnailImages'
        /// </summary>
        [Test]
        public void ThumbnailImagesTest()
        {
            // TODO unit test for the property 'ThumbnailImages'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'UnitPrice'
        /// </summary>
        [Test]
        public void UnitPriceTest()
        {
            // TODO unit test for the property 'UnitPrice'
        }
        /// <summary>
        /// Test the property 'UnitPricingMeasure'
        /// </summary>
        [Test]
        public void UnitPricingMeasureTest()
        {
            // TODO unit test for the property 'UnitPricingMeasure'
        }

    }

}
