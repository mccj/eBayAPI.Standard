/* 
 * Browse API
 *
 * The Browse API has the following resources: item_summary: Lets shoppers search for specific items by keyword, GTIN, category, product, or item aspects and refine the results by using filters. item: Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size. This resource also provides a bridge between the eBay legacy APIs, such as Trading and Finding, and the RESTful APIs, such as Browse, which use different formats for the item IDs. You can use the Browse API to retrieve the basic details of the item and the RESTful item ID using a legacy item ID.
 *
 * OpenAPI spec version: v1_beta.12.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ItemSummaryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class ItemSummaryApiTests
    {
        private ItemSummaryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new ItemSummaryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ItemSummaryApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ItemSummaryApi
            //Assert.IsInstanceOfType(typeof(ItemSummaryApi), instance, "instance is a ItemSummaryApi");
        }

        
        /// <summary>
        /// Test Search
        /// </summary>
        [TestMethod]
        public void SearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string aspectFilter = null;
            //string categoryIds = null;
            //string epid = null;
            //string fieldgroups = null;
            //string filter = null;
            //string gtin = null;
            //string limit = null;
            //string offset = null;
            //string q = null;
            //string sort = null;
            //var response = instance.Search(aspectFilter, categoryIds, epid, fieldgroups, filter, gtin, limit, offset, q, sort);
            //Assert.IsInstanceOf<SearchPagedCollection> (response, "response is SearchPagedCollection");
        }
        
    }

}
