{
  "openapi": "3.0.0",
  "info": {
    "title": "Order API",
    "description": "The Order API provides interfaces that lets shoppers pay for items (for both eBay guest and eBay member buyers). It also lets them track the payment and shipping status of the order. It enables sellers to use the <a href=\"/api-docs/buy/static/api-order.html#Post\">Post Order API</a> for returns and cancellations for eBay member buyers.   <p>The Order API has the following resources:  </p>  <ul>  <li><b>checkout_session:</b> Lets eBay members purchase items using PayPal or a credit card.</li>  <li><b>guest_checkout_session:</b> Lets eBay guests purchase items using a credit card or PayPal Checkout.</li>   <li><b>proxy_guest_checkout_session:</b> Lets eBay guests purchase items through a vault service provider (VSP).</li>  <li><b>guest_purchase_order and purchase_order:</b> Lets sellers track the payment status and show the buyers their purchase order.</li> </ul>",
    "contact": {
      "name": "eBay Inc,"
    },
    "license": {
      "name": "eBay API License Agreement",
      "url": "https://go.developer.ebay.com/api-license-agreement"
    },
    "version": "v1_beta.11.0"
  },
  "servers": [
    {
      "url": "https://apix.ebay.com{basePath}",
      "description": "Production",
      "variables": {
        "basePath": {
          "default": "/buy/order/v1"
        }
      }
    },
    {
      "url": "https://api.ebay.com{basePath}",
      "description": "Production",
      "variables": {
        "basePath": {
          "default": "/buy/order/v1"
        }
      }
    }
  ],
  "paths": {
    "/checkout_session/{checkoutSessionId}": {
      "get": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call returns the details of the specified eBay member checkout session. The checkoutSessionId is passed in as a URI parameter and is required. This call has no request payload. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "getCheckoutSession",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/checkout_session/initiate": {
      "post": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call creates a eBay member checkout session, which is the first step in performing a checkout. You use this call to create a checkout session before you can process a checkout. This call assumes (and checks for) payment using PayPal, which is linked to the buyer's eBay account. You can use the updatePaymentInfo call to pay by a credit card. If the address submitted cannot be validated, a warning message will be returned. The call returns a checkoutSessionId that you use as a URI parameter in subsequent checkout calls. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Also see Negative Testing Using Stubs for information on how to emulate error conditions for this call using stubs. Tip: To test the entire checkout flow, you might need a &quot;test&quot; credit card. You can generate a credit card number from http://www.getcreditcardnumbers.com. Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "initiateCheckoutSession",
        "requestBody": {
          "description": "The container for the fields needed to create a eBay member checkout session.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the fields needed to create a eBay member checkout session.",
                "$ref": "#/components/schemas/CreateSignInCheckoutSessionRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/checkout_session/{checkoutSessionId}/place_order": {
      "post": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call creates the purchase order, pays for the items, and terminates the specified eBay member checkout session. The checkoutSessionId is passed in as a URI parameter and is required. Although there is not a request payload, for this call you must pass in { } in the request body. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Also see Negative Testing Using Stubs for information on how to emulate error conditions for this call using stubs. Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview. Note: If the credit card is declined, the checkout session is unusable. You will need to create a new checkout session for the order using the initiateCheckoutSession call.",
        "operationId": "placeOrder",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateCheckoutSession call. Note: When using this ID in other Order API calls, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Container for the buyer's acceptance of the PayPal payment terms fields.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Container for the buyer's acceptance of the PayPal payment terms fields.",
                "$ref": "#/components/schemas/PlaceOrder"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/checkout_session/{checkoutSessionId}/update_payment_info": {
      "post": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call changes the payment method information of the specified eBay member checkout session. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updatePaymentInfo",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the credit card information.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the credit card information.",
                "$ref": "#/components/schemas/UpdatePaymentInformation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/checkout_session/{checkoutSessionId}/update_quantity": {
      "post": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call changes the quantity of the specified line item in an eBay member checkout session. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateQuantity",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the fields needed to update the quantity of a specific line item.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the fields needed to update the quantity of a specific line item.",
                "$ref": "#/components/schemas/UpdateQuantity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/checkout_session/{checkoutSessionId}/update_shipping_address": {
      "post": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call changes the shipping address for in an eBay member checkout session. All the line items in an order must be shipped to the same address, but the shipping method can be specific to the line item. Note: If the address submitted cannot be validated, a warning message will be returned. This does not prevent the call from executing, but you may want to verify the address. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateShippingAddress",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the shipping address. Note: If the address cannot be validated, a warning message will be returned.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the shipping address. Note: If the address cannot be validated, a warning message will be returned.",
                "$ref": "#/components/schemas/ShippingAddressImpl"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/checkout_session/{checkoutSessionId}/update_shipping_option": {
      "post": {
        "tags": [
          "checkout_session"
        ],
        "description": "This call changes the shipping method for the specified line item in an eBay member checkout session. The shipping option can be set for each line item. This gives the shopper the ability choose the cost of shipping for each line item. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateShippingOption",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned checkout session ID, for a specific eBay marketplace, that is returned by initiateCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the fields needed to update the shipping option of a line item.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the fields needed to update the shipping option of a line item.",
                "$ref": "#/components/schemas/UpdateShippingOption"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}": {
      "get": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call returns the details of the specified guest checkout session. The checkoutSessionId is passed in as a URI parameter and is required. This call has no request payload. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "getGuestCheckoutSession",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/initiate": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call creates an eBay guest checkout session, which is the first step in performing a checkout. The call returns a checkoutSessionId that you use as a URI parameter in subsequent checkout calls. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Also see Negative Testing Using Stubs for information on how to emulate error conditions for this call using stubs. TIP: To test the entire checkout flow, you might need a &quot;test&quot; credit card. You can generate a credit card number from http://www.getcreditcardnumbers.com. Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "initiateGuestCheckoutSession",
        "requestBody": {
          "description": "The container for the fields needed to create an eBay guest checkout session.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the fields needed to create an eBay guest checkout session.",
                "$ref": "#/components/schemas/CreateGuestCheckoutSessionRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}/initiate_payment": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call is used only in the PayPal Checkout payment flow. It sets the payment to the PayPal Checkout, which enables eBay guests to pay for their items with or without having a PayPal account without leaving your App or site. You can use this payment flow whether you are PCI compliant or not. To pay for items, buyers can either: Sign into their PayPal account and use any payment method associated with that account. Without a PayPal account, they can pay using a credit card or a direct debit from their bank account. For details about this flow, see PayPal Checkout payment flow. Requirement: To use this call you must integrate with PayPal's checkout.js on the client side. API URLs To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions This call is supported only for whitelisted Partners and only on the EBAY-US - eBay USA, EBAY-DE - eBay Germany (eBay.de), and EBAY-GB - eBay Great Britain (eBay.co.uk) eBay sites. For other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "initiateGuestPayment",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the initiateGuestPayment call fields.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the initiateGuestPayment call fields.",
                "$ref": "#/components/schemas/InitiatePaymentRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}/place_order": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call creates the purchase order, pays for the items, and terminates the specified guest checkout session. The checkoutSessionId is passed in as a URI parameter and is required. Although there is not a request payload, for this call you must pass in { } in the request body. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Also see Negative Testing Using Stubs for information on how to emulate error conditions for this call using stubs. Request headers This call requires specific request headers. For details see, HTTP request headers section. Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview. Note: If the credit card is declined, the checkout session is unusable. You will need to create a new checkout session for the order using the initiateGuestCheckoutSession call.",
        "operationId": "placeGuestOrder",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific, eBay marketplace that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Container for the buyer's acceptance of the PayPal payment terms fields.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Container for the buyer's acceptance of the PayPal payment terms fields.",
                "$ref": "#/components/schemas/PlaceOrder"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}/update_payment_info": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call changes the payment method information of the specified guest checkout session. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateGuestPaymentInfo",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for credit card information.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for credit card information.",
                "$ref": "#/components/schemas/UpdatePaymentInformation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}/update_quantity": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call changes the quantity of the specified line item in an eBay guest checkout session. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateGuestQuantity",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the updating the quantity in a line item.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the updating the quantity in a line item.",
                "$ref": "#/components/schemas/UpdateQuantity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}/update_shipping_address": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call changes the shipping address for the order in an eBay guest checkout session. All the line items in an order must be shipped to the same address, but the shipping method can be specific to the line item. Note: If the address submitted cannot be validated, a warning message will be returned. This does not prevent the call from executing, but you may want to verify the address. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateGuestShippingAddress",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the shipping address. Note: If the address cannot be validated, a warning message will be returned.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the shipping address. Note: If the address cannot be validated, a warning message will be returned.",
                "$ref": "#/components/schemas/ShippingAddressImpl"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_checkout_session/{checkoutSessionId}/update_shipping_option": {
      "post": {
        "tags": [
          "guest_checkout_session"
        ],
        "description": "This call changes the shipping method for the specified line item in an eBay guest checkout session. The shipping option can be set for each line item. This gives the shopper the ability choose the cost of shipping for each line item. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateGuestShippingOption",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The container for the fields for updating the shipping option.",
          "content": {
            "application/json": {
              "schema": {
                "description": "The container for the fields for updating the shipping option.",
                "$ref": "#/components/schemas/UpdateShippingOption"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/{checkoutSessionId}": {
      "get": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call returns the details of the specified eBay guest checkout session. The checkoutSessionId is passed in as a URI parameter and is required. This call has no request payload. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "getProxyGuestCheckoutSession",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateProxyGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/initiate": {
      "post": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call creates an eBay proxy guest checkout session and is the first step in the payment process. This endpoint is invoked by the VSP (vault service provider) on behalf of the seller. The call returns a checkoutSessionId that you use as a URI parameter in subsequent checkout calls. For details about the VSP payment flow, see Vault Service Provider (VSP) Checkout payment flow for eBay guests. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Also see Negative Testing Using Stubs for information on how to emulate error conditions for this call using stubs. TIP: To test the entire checkout flow, you might need a &quot;test&quot; credit card. You can generate a credit card number from http://www.getcreditcardnumbers.com. Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "initiateProxyGuestCheckoutSession",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The oAuth token. Note: The Partner must include this header in the request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-DATE",
            "in": "header",
            "description": "The UTC timestamp of the request, which is generated and added to the request by the VSP.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-MARKETPLACE-ID",
            "in": "header",
            "description": "The eBay marketplace ID. For a list of supported sites, see API Restrictions in the Order API overview. Note: The Partner must include this header in the request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-REQUEST-NONCE",
            "in": "header",
            "description": "A UUID (a 128-bit universal unique ID), which is generated and added to the request by the VSP.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-SIGNATURE",
            "in": "header",
            "description": "The HMAC signature, which is generated and added to the request by the VSP.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGuestCheckoutSessionRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/{checkoutSessionId}/place_order": {
      "post": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call creates the purchase order, pays for the items, and terminates the specified guest checkout session. The checkoutSessionId is passed in as a URI parameter and is required. Although there is not a request payload, for this call you must pass in { } in the request body. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Also see Negative Testing Using Stubs for information on how to emulate error conditions for this call using stubs. Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "placeProxyGuestOrder",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateProxyGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceOrder"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/{checkoutSessionId}/update_payment_info": {
      "post": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call changes the payment method information of the specified guest checkout session. This endpoint is invoked by the VSP (vault service provider) on behalf of the partner. Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateProxyGuestPaymentInfo",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The oAuth token. Note: The Partner must include this header in the request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateProxyGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-DATE",
            "in": "header",
            "description": "The UTC timestamp of the request, which is generated and added to the request by the VSP.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-MARKETPLACE-ID",
            "in": "header",
            "description": "The eBay marketplace ID. For a list of supported sites, see API Restrictions in the Order API overview. Note: The Partner must include this header in the request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-REQUEST-NONCE",
            "in": "header",
            "description": "A UUID (a 128-bit universal unique ID), which is generated and added to the request by the VSP.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-EBAY-C-SIGNATURE",
            "in": "header",
            "description": "The HMAC signature, which is generated and added to the request by the VSP.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentInformation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/{checkoutSessionId}/update_quantity": {
      "post": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call changes the quantity of the specified line item in an eBay proxy guest checkout session. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateProxyGuestQuantity",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateProxyGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuantity"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/{checkoutSessionId}/update_shipping_address": {
      "post": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call changes the shipping address for the order in an eBay proxy guest checkout session. All the line items in an order must be shipped to the same address, but the shipping method can be specific to the line item. Note: If the address submitted cannot be validated, a warning message will be returned. This does not prevent the call from executing, but you may want to verify the address. Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateProxyGuestShippingAddress",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateProxyGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingAddressImpl"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/proxy_guest_checkout_session/{checkoutSessionId}/update_shipping_option": {
      "post": {
        "tags": [
          "proxy_guest_checkout_session"
        ],
        "description": "This call changes the shipping method for the specified line item in an eBay proxy guest checkout session. The shipping option can be set for each line item. This gives the shopper the ability choose the cost of shipping for each line item. To meet security requirements for payments, the URLs for this call are: Production URL: https://apix.ebay.com/buy/order/v1 Sandbox URL: https://apix.sandbox.ebay.com/buy/order/v1 Restrictions This call is used only when the seller is using a payment vault service, such as Braintree, to process payments. For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "updateProxyGuestShippingOption",
        "parameters": [
          {
            "name": "checkoutSessionId",
            "in": "path",
            "description": "The eBay-assigned session ID, for a specific eBay marketplace, that is returned by the initiateProxyGuestCheckoutSession call. Note: When using this ID in this call, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShippingOption"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order"
            ]
          }
        ]
      }
    },
    "/guest_purchase_order/{purchaseOrderId}": {
      "get": {
        "tags": [
          "guest_purchase_order"
        ],
        "description": "This call retrieves the details about a specific guest purchase order. It returns the line items, including purchase order status; dates created and modified; item quantity and listing data; payment and shipping information; and prices, taxes, and discounts and credits. The purchaseOrderId is passed in as a URI parameter and is required. This call has no request payload. The placeGuestOrder call initiates the payment process, which can sometimes take a few minutes. You can use this call to not only get the details of a purchase order but to check the value of the purchaseOrderPaymentStatus field to determine if the order has been paid for. If the order has been paid for, this field will return PAID. Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "getGuestPurchaseOrder",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "The unique identifier of a purchase order made by a guest buyer, for which details are to be retrieved. This value is returned by the placeGuestOrder call in the purchaseOrderId field. The purchaseOrderId is passed in as a URI parameter and is required.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestPurchaseOrder"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.guest.order"
            ]
          }
        ]
      },
      "servers": [
        {
          "url": "https://api.ebay.com{basePath}",
          "description": "Production",
          "variables": {
            "basePath": {
              "default": "/buy/order/v1"
            }
          }
        }
      ]
    },
    "/purchase_order/{purchaseOrderId}": {
      "get": {
        "tags": [
          "purchase_order"
        ],
        "description": "This call retrieves the details about a specific eBay member purchase order. It returns the line items, including purchase order status; dates created and modified; item quantity and listing data; payment and shipping information; and prices, taxes, and discounts and credits. The purchaseOrderId is passed in as a URI parameter and is required. This call has no request payload. The placeOrder call initiates the payment process, which can sometimes take a few minutes. You can use this call to not only get the details of a purchase order but to check the value of the purchaseOrderPaymentStatus field to determine if the order has been paid for. If the order has been paid for, this field will return PAID. This call also returns the legacyItemId, legacyTransactionId, and legacyOrderId fields. The values in these fields enable sellers to use the Post Order API for eBay member checkouts, to process a return or cancellation. For more information, see Post order tasks in the Buy Integration Guide. Restrictions For a list of supported sites and other restrictions, see API Restrictions in the Order API overview.",
        "operationId": "getPurchaseOrder",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "The unique identifier of a purchase order made by an eBay Member, for which details are to be retrieved. This value is returned by the placeOrder call in the purchaseOrderId field. The purchaseOrderId is passed in as a URI parameter and is required.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Error"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_auth": [
              "https://api.ebay.com/oauth/api_scope/buy.order.readonly",
              "https://api.ebay.com/oauth/api_scope/buy.order"
            ]
          }
        ]
      },
      "servers": [
        {
          "url": "https://api.ebay.com{basePath}",
          "description": "Production",
          "variables": {
            "basePath": {
              "default": "/buy/order/v1"
            }
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Identifies the type of error."
          },
          "domain": {
            "type": "string",
            "description": "Name for the primary system where the error occurred. This is relevant for application errors."
          },
          "errorId": {
            "type": "integer",
            "description": "A unique number to identify the error.",
            "format": "int32"
          },
          "inputRefIds": {
            "type": "array",
            "description": "An array of request elements most closely associated to the error.",
            "items": {
              "type": "string"
            }
          },
          "longMessage": {
            "type": "string",
            "description": "A more detailed explanation of the error."
          },
          "message": {
            "type": "string",
            "description": "Information on how to correct the problem, in the end user's terms and language where applicable."
          },
          "outputRefIds": {
            "type": "array",
            "description": "An array of request elements most closely associated to the error.",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "description": "An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned.",
            "items": {
              "$ref": "#/components/schemas/ErrorParameter"
            }
          },
          "subdomain": {
            "type": "string",
            "description": "Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc."
          }
        },
        "description": "This type defines the fields that can be returned in an error."
      },
      "ErrorParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The object of the error."
          },
          "value": {
            "type": "string",
            "description": "The value of the object."
          }
        }
      },
      "Adjustment": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "The container for the amount and currency of the adjustment.",
            "$ref": "#/components/schemas/Amount"
          },
          "label": {
            "type": "string",
            "description": "Text that describes the adjustment."
          }
        },
        "description": "The type that defines the fields for seller adjustments. An adjustment can be a credit or debit."
      },
      "Amount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "A three letter ISO 4217 code specifying the currency of the monetary amount. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/CurrencyCodeEnum.html'>eBay API documentation</a>"
          },
          "value": {
            "type": "string",
            "description": "The monetary amount."
          }
        },
        "description": "The type the defines the fields for the details of a monetary amount, in the currency used by the call and in the original currency, if the amount was converted between currencies."
      },
      "BillingAddress": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The first line of the street address."
          },
          "addressLine2": {
            "type": "string",
            "description": "The second line of the street address where the item is being shipped. This optional field can be used for information such as 'Suite Number' or 'Apt Number'."
          },
          "city": {
            "type": "string",
            "description": "The city of the address."
          },
          "country": {
            "type": "string",
            "description": "The two letter code representing the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/CountryCodeEnum.html'>eBay API documentation</a>"
          },
          "county": {
            "type": "string",
            "description": "The county of the address."
          },
          "firstName": {
            "type": "string",
            "description": "The buyer's first name."
          },
          "lastName": {
            "type": "string",
            "description": "The buyer's last name."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address."
          },
          "stateOrProvince": {
            "type": "string",
            "description": "The state or province of the address."
          }
        },
        "description": "The type that defines the fields for an address."
      },
      "CheckoutSessionResponse": {
        "type": "object",
        "properties": {
          "acceptedPaymentMethods": {
            "type": "array",
            "description": "The type that defines the fields for the payment method that can be used.",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "checkoutSessionId": {
            "type": "string",
            "description": "A unique eBay-assigned ID value, for a specific marketplace, the identifies a checkout session. For example: Guest checkoutSessionId: v1|5688999|gh677u eBay Member checkoutSessionId: 67667512387 Note: When using this ID in other Order API calls, the X-EBAY-C-MARKETPLACE-ID value must be the same as what was used when this checkout session was created. See Checkout session restrictions in the Buy Integration Guide."
          },
          "expirationDate": {
            "type": "string",
            "description": "The expiration time for the checkout session."
          },
          "lineItems": {
            "type": "array",
            "description": "An array of line items associated with the checkout session.",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "pricingSummary": {
            "description": "The container for the details of the grand total of all the line items.",
            "$ref": "#/components/schemas/PricingSummary"
          },
          "providedPaymentInstrument": {
            "description": "The container for the payment methods that can be used for the checkout. This is returned only if you have used the updatePaymentInfo call to change the payment method.",
            "$ref": "#/components/schemas/ProvidedPaymentInstrument"
          },
          "shippingAddress": {
            "description": "The container for the address to which the purchase order will be shipped. Note: If the address cannot be validated, a warning message is be returned along with the response.",
            "$ref": "#/components/schemas/ShippingAddress"
          },
          "warnings": {
            "type": "array",
            "description": "An array of any process errors or warnings that were generated during the call processing.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Type that defines the fields for a checkout session."
      },
      "CreateGuestCheckoutSessionRequest": {
        "type": "object",
        "properties": {
          "contactEmail": {
            "type": "string",
            "description": "The buyer's email address."
          },
          "contactFirstName": {
            "type": "string",
            "description": "The buyer's first name."
          },
          "contactLastName": {
            "type": "string",
            "description": "The buyer's last name."
          },
          "creditCard": {
            "description": "The container for the credit card being used to pay for the items.",
            "$ref": "#/components/schemas/CreditCard"
          },
          "lineItemInputs": {
            "type": "array",
            "description": "The type that defines the fields for a line item in an eBay guest checkout session. Maximum number of line items: 4",
            "items": {
              "$ref": "#/components/schemas/LineItemInput"
            }
          },
          "shippingAddress": {
            "description": "The container for the shipping address in an eBay guest checkout session.",
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "description": "The type that defines the fields needed to create an eBay guest checkout session."
      },
      "CreateSignInCheckoutSessionRequest": {
        "type": "object",
        "properties": {
          "creditCard": {
            "description": "The container for the buyer's credit card information.",
            "$ref": "#/components/schemas/CreditCard"
          },
          "lineItemInputs": {
            "type": "array",
            "description": "The type that defines the fields for a line item in a eBay member checkout session. Maximum number of line items: 4",
            "items": {
              "$ref": "#/components/schemas/LineItemInput"
            }
          },
          "shippingAddress": {
            "description": "The container for the shipping address in a eBay member checkout session.",
            "$ref": "#/components/schemas/ShippingAddress"
          }
        },
        "description": "The type that defines the fields for creating a eBay member checkout session."
      },
      "CreditCard": {
        "type": "object",
        "properties": {
          "accountHolderName": {
            "type": "string",
            "description": "The name of the card holder under which the credit card was issued."
          },
          "billingAddress": {
            "description": "The container for the billing address of the card holder. Note: If the address cannot be validated, a warning message will be returned.",
            "$ref": "#/components/schemas/BillingAddress"
          },
          "brand": {
            "type": "string",
            "description": "The type of the credit card. Valid Values: Visa MasterCard AmEx Discover Note: This value is not case sensitive."
          },
          "cardNumber": {
            "type": "string",
            "description": "The credit card number on the card."
          },
          "cvvNumber": {
            "type": "string",
            "description": "The Card Verification Value of the credit card. This value is also known as the card verification code (CVC) or card security code (CSC). This is a three-digit number on VISA&reg;, MasterCard&reg;, and Discover&reg; branded credit and debit cards. On American Express&reg; branded cards, this is a four-digit numeric code. Note: This number is not the PIN associated with the card."
          },
          "expireMonth": {
            "type": "integer",
            "description": "The month the credit card expires.",
            "format": "int32"
          },
          "expireYear": {
            "type": "integer",
            "description": "The year the credit card expires.",
            "format": "int32"
          }
        },
        "description": "The type that defines the fields for the credit card that's used to pay for the items."
      },
      "Image": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Reserved for future use.",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "description": "The URL of the image."
          },
          "width": {
            "type": "integer",
            "description": "Reserved for future use.",
            "format": "int32"
          }
        },
        "description": "Type the defines the details of an image, such as size and URL. Currently only imageUrl is getting populated. The height and width were added for future use."
      },
      "InitiatePaymentRequest": {
        "type": "object",
        "properties": {
          "paymentMethodBrandType": {
            "type": "string",
            "description": "The enumeration value that specifies the payment method company. Note: The only value supported for the initiateGuestPayment call is PAYPAL_CHECKOUT. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PaymentMethodBrandEnum.html'>eBay API documentation</a>"
          },
          "paymentMethodType": {
            "type": "string",
            "description": "The enumeration value that specifies the payment method type. Note: The only value supported for the initiateGuestPayment call is WALLET. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PaymentMethodTypeEnum.html'>eBay API documentation</a>"
          }
        },
        "description": "Type that defines the fields for the initiateGuestPayment call."
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "image": {
            "description": "The URL of the item's image.",
            "$ref": "#/components/schemas/Image"
          },
          "itemId": {
            "type": "string",
            "description": "The identifier of the item."
          },
          "legacyReference": {
            "description": "The container that returns fields to support using the Post Order API for returns and cancellations. Note: The Post Order API can be used only with eBay member checkouts.",
            "$ref": "#/components/schemas/LegacyReference"
          },
          "lineItemId": {
            "type": "string",
            "description": "The identifier of this line item. This is created by the initiateCheckoutSession for a member and initiateGuestCheckoutSession for a guest calls."
          },
          "lineItemPaymentStatus": {
            "type": "string",
            "description": "An enumeration value that indicates the payment status of this line item. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/LineItemPaymentStatusEnum.html'>eBay API documentation</a>"
          },
          "lineItemStatus": {
            "type": "string",
            "description": "An enumeration value that indicates the state of this line item. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/LineItemStatusEnum.html'>eBay API documentation</a>"
          },
          "netPrice": {
            "description": "The total cost for the items in this line item taking into account the quantity and applying any seller item discounts, such as Buy 1 Get 1. Note : This does not include any shipping discounts, shipping costs, or seller adjustments.",
            "$ref": "#/components/schemas/Amount"
          },
          "quantity": {
            "type": "integer",
            "description": "The number of individual items in this line item.",
            "format": "int32"
          },
          "seller": {
            "description": "The container for information about the seller offering this item, such as the seller's user name.",
            "$ref": "#/components/schemas/Seller"
          },
          "shippingDetail": {
            "description": "Information about the shipping provider used for this line item.",
            "$ref": "#/components/schemas/ShippingDetail"
          },
          "title": {
            "type": "string",
            "description": "The seller created title of the item."
          }
        },
        "description": "Contains information about a line items in a purchase order."
      },
      "LineItemInput": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "description": "The eBay identifier of an item. This ID is returned by the Browse and Feed API calls. The ID must be in RESTful item ID format. For example: v1|262446562346|561248611424 or v1|112330214619|0. For more information about item ID for RESTful APIs, see the Legacy API compatibility. Each itemId will become a single line item. You can have a maximum of four itemId(s) per checkout. Maximum: 4"
          },
          "quantity": {
            "type": "integer",
            "description": "The number of items ordered in this line item.",
            "format": "int32"
          }
        },
        "description": "The type that defines the fields for a line item."
      },
      "PaymentInstrumentReference": {
        "type": "object",
        "properties": {
          "externalReferenceId": {
            "type": "string",
            "description": "The identifier of the buyer's PayPal cart, which is returned by the initiateGuestPayment call. This ID is generated by PayPal and required for the PayPal Checkout payment flow."
          },
          "lastFourDigitForCreditCard": {
            "type": "string",
            "description": "The last four digits of the credit card number being used to pay for the items."
          }
        },
        "description": "The type that defines the fields for the payment reference, such as last four digits of a credit card."
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Text indicating the payment type. For example, when paying by credit card, this label will be CC . When paying using PayPal's Checkout the label will be WALLET."
          },
          "logoImage": {
            "description": "The URL of the image of the payment method logo.",
            "$ref": "#/components/schemas/Image"
          },
          "paymentMethodBrands": {
            "type": "array",
            "description": "An array of credit card brands that can be used as the payment method.",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodBrand"
            }
          },
          "paymentMethodMessages": {
            "type": "array",
            "description": "The type that defines the fields for legal messages and buyer consent verification.",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodMessage"
            }
          },
          "paymentMethodType": {
            "type": "string",
            "description": "An enumeration value that indicates the method of payment, such as credit card. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PaymentMethodTypeEnum.html'>eBay API documentation</a>"
          }
        },
        "description": "The type that defines the fields for the payment method."
      },
      "PaymentMethodBrand": {
        "type": "object",
        "properties": {
          "logoImage": {
            "description": "The URL of the image of the credit card company (brand).",
            "$ref": "#/components/schemas/Image"
          },
          "paymentMethodBrandType": {
            "type": "string",
            "description": "An enumeration value that indicates the credit card company (brand). For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PaymentMethodBrandEnum.html'>eBay API documentation</a>"
          }
        },
        "description": "The type that defines the fields for the credit card company (brand), which can be used as the payment method."
      },
      "PaymentMethodMessage": {
        "type": "object",
        "properties": {
          "legalMessage": {
            "type": "string",
            "description": "Information that eBay is legally obligated to show to the buyer. This field can be null, in which case do nothing. But if this field is not null, the value of this field must appear on the checkout page. Note: This field is not used for US purchases."
          },
          "privacyPolicyWebUrl": {
            "type": "string",
            "description": "Reserved for future use."
          },
          "requiredForUserConfirmation": {
            "type": "boolean",
            "description": "Reserved for future use."
          },
          "userAgreementWebUrl": {
            "type": "string",
            "description": "Reserved for future use."
          }
        },
        "description": "The type that defines the fields for legal messages and buyer consent verification."
      },
      "PlaceOrder": {
        "type": "object",
        "properties": {
          "paymentTermsAccepted": {
            "type": "boolean",
            "description": "Indicates if the buyer has accepted PayPal's User Agreement and Privacy Policy."
          },
          "paymentTermsAcceptedDate": {
            "type": "string",
            "description": "The date the buyer accepted the PayPal User Agreement and Privacy Policy."
          }
        },
        "description": "The type that defines the fields for the buyer's acceptance of the PayPal's User Agreement and Privacy Policy."
      },
      "PricingSummary": {
        "type": "object",
        "properties": {
          "adjustment": {
            "description": "The total amount of any seller adjustments. An adjustment can be a credit or debit. This is used to catch any monetary changes to the purchase order that are not already captured in one of the other fields.",
            "$ref": "#/components/schemas/Adjustment"
          },
          "deliveryCost": {
            "description": "The shipping cost for all the line items before any shipping discounts are applied. Let's say there were 4 line items and the shipping cost for each line items is $5. One of the line items qualifies for free shipping ($5) and two line items qualify for a Buy 1 Get 1 offer ($6 &amp; $15 free item) discount. The deliveryCost value would be 20 ($5 x 4 items), which is the total cost for shipping all the line items before discounts.",
            "$ref": "#/components/schemas/Amount"
          },
          "deliveryDiscount": {
            "description": "The total amount of the shipping discounts for the all line items, which include promotional shipping discounts, such as free shipping if you buy two or more. Let's say there were 4 line items and the shipping cost for each line items is $5. One of the line items qualifies for free shipping ($5) and two line items qualify for a Buy 1 Get 1 offer ($6 &amp; $15 free item) discount. The deliveryDiscounts value would be 5, which is the value of the free shipping discount. Note: This will always be a negative number.",
            "$ref": "#/components/schemas/Amount"
          },
          "fee": {
            "description": "The total amount of any fees for all the line items, such as a recycling fee.",
            "$ref": "#/components/schemas/Amount"
          },
          "priceDiscount": {
            "description": "The total amount of all the item specific discounts for all line items, such as Buy 1 Get 1 free discounts. Let's say there were 4 line items and the shipping cost for each line items is $5. One of the line items qualifies for free shipping ($5) and two line items qualify for a Buy 1 Get 1 offer ($6 &amp; $15 free item) discount. The priceDiscount value would be 21, which is the total of the two Buy 1 Get 1 discounts ($6 + $15). Note: This will always be a negative number.",
            "$ref": "#/components/schemas/Amount"
          },
          "priceSubtotal": {
            "description": "The total amount for all the line items before adding in taxes, shipping costs, and seller adjustments and subtracting promotional and shipping discounts.",
            "$ref": "#/components/schemas/Amount"
          },
          "tax": {
            "description": "The total amount of the taxes for all the line items.",
            "$ref": "#/components/schemas/Amount"
          },
          "total": {
            "description": "The total of the purchase order. total = priceSubtotal + baseDeliveryCost + tax + deliveryDiscounts + priceDiscount + adjustment. Note: deliveryDiscounts and priceDiscount are negative numbers.",
            "$ref": "#/components/schemas/Amount"
          }
        },
        "description": "The type that defines the fields for the costs, discounts, and seller fees and adjustments of all the line items."
      },
      "ProvidedPaymentInstrument": {
        "type": "object",
        "properties": {
          "paymentInstrumentReference": {
            "description": "The container for the payment reference, such as last four digits of a credit card.",
            "$ref": "#/components/schemas/PaymentInstrumentReference"
          },
          "paymentMethodBrand": {
            "description": "The container for the name and logo of the payment company (brand), such as Visa.",
            "$ref": "#/components/schemas/PaymentMethodBrand"
          },
          "paymentMethodType": {
            "type": "string",
            "description": "An enumeration value that indicates the method of payment, such as CREDIT_CARD. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PaymentMethodTypeEnum.html'>eBay API documentation</a>"
          }
        },
        "description": "The type that defines the fields for reference information about the payment method. This is returned only if you have used the updatePaymentInfo call to change the payment method."
      },
      "PurchaseOrderSummary": {
        "type": "object",
        "properties": {
          "purchaseOrderHref": {
            "type": "string",
            "description": "The URI of the purchase order."
          },
          "purchaseOrderId": {
            "type": "string",
            "description": "A unique identifier of the purchase order. When a checkout session completes, a purchase order ID is generated."
          },
          "purchaseOrderPaymentStatus": {
            "type": "string",
            "description": "An enumeration value that indicates the payment status for the purchase order. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PurchaseOrderPaymentStatusEnum.html'>eBay API documentation</a>"
          },
          "warnings": {
            "type": "array",
            "description": "An array of warning messages.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The type that defines the fields for the summary of a purchase order."
      },
      "Seller": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user name created by the seller for use on eBay."
          }
        },
        "description": "Contains basic information about a particular seller."
      },
      "ShippingAddress": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The first line of the street address where the item is being shipped."
          },
          "addressLine2": {
            "type": "string",
            "description": "The second line of the street address where the item is being shipped. This optional field can be used for information such as 'Suite Number' or 'Apt Number'."
          },
          "city": {
            "type": "string",
            "description": "The city of the address where the item is being shipped."
          },
          "country": {
            "type": "string",
            "description": "The two letter code representing the country of the address. Restrictions: Currently, the only country supported for a shipping address is US. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/CountryCodeEnum.html'>eBay API documentation</a>"
          },
          "county": {
            "type": "string",
            "description": "The county of the address where the item is being shipped."
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the person receiving the package."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address where the item is being shipped."
          },
          "recipient": {
            "type": "string",
            "description": "Name of the person receiving the package."
          },
          "stateOrProvince": {
            "type": "string",
            "description": "The state or province of the address where the item is being shipped."
          }
        },
        "description": "The type that defines the fields for a shipping address."
      },
      "ShippingAddressImpl": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The first line of the street address."
          },
          "addressLine2": {
            "type": "string",
            "description": "The second line of the street address where the item is being shipped. This optional field can be used for information such as 'Suite Number' or 'Apt Number'."
          },
          "city": {
            "type": "string",
            "description": "The city of the address."
          },
          "country": {
            "type": "string",
            "description": "The two letter code representing the country of the address. Restrictions: Currently, the only country supported for a shipping address is US. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/CountryCodeEnum.html'>eBay API documentation</a>"
          },
          "county": {
            "type": "string",
            "description": "The county of the address."
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the person receiving the package."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address."
          },
          "recipient": {
            "type": "string",
            "description": "Full name of the person receiving the purchase order."
          },
          "stateOrProvince": {
            "type": "string",
            "description": "The state or province of the address."
          }
        },
        "description": "The type that defines the shipping address fields. Note: If the address cannot be validated, a warning message is be returned along with the response."
      },
      "UpdatePaymentInformation": {
        "type": "object",
        "properties": {
          "creditCard": {
            "description": "Container for the buyer's credit card information.",
            "$ref": "#/components/schemas/CreditCard"
          },
          "wallet": {
            "description": "The container for the wallet payment token.",
            "$ref": "#/components/schemas/Wallet"
          }
        },
        "description": "The type that defines the fields for payment information."
      },
      "UpdateQuantity": {
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "A unique eBay-assigned ID value to identify the line item in a purchase order."
          },
          "quantity": {
            "type": "integer",
            "description": "The number of individual items ordered in this line item, as specified by the buyer.",
            "format": "int32"
          }
        },
        "description": "The type that defines the fields needed to update the quantity of a line item."
      },
      "UpdateShippingOption": {
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "A unique eBay-assigned ID value that identifies the line item in a checkout session."
          },
          "shippingOptionId": {
            "type": "string",
            "description": "A unique ID for the selected shipping option/method."
          }
        },
        "description": "The type that defines the fields needed to update the shipping option of a line item."
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "paymentToken": {
            "type": "string",
            "description": "The token is a payment nonce. A payment method nonce is a secure, one-time-use reference to payment information. It's the key element that allows your server to communicate sensitive payment information to the payment processor server without ever touching the raw data. The nonce is generated by the payment processor."
          }
        },
        "description": "The type that defines the fields for payment tokens."
      },
      "LineItemReference": {
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "A unique eBay-assigned ID value to identify the line item in a purchase order."
          },
          "quantity": {
            "type": "integer",
            "description": "The number of individual items ordered for this line item, as specified by the buyer.",
            "format": "int32"
          }
        },
        "description": "Type the defines the fields for the line item ID and the quantity."
      },
      "GuestPurchaseOrder": {
        "type": "object",
        "properties": {
          "lineItems": {
            "type": "array",
            "description": "The container holding list of line items under the order",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "pricingSummary": {
            "description": "The container for the details of the grand total of the purchase order.",
            "$ref": "#/components/schemas/PricingSummary"
          },
          "purchaseOrderCreationDate": {
            "type": "string",
            "description": "The creation date of purchase order."
          },
          "purchaseOrderId": {
            "type": "string",
            "description": "The unique identifier of the purchase order. This value was returned in the purchaseOrderId field by the placeGuestOrder call."
          },
          "purchaseOrderPaymentStatus": {
            "type": "string",
            "description": "The container for the status of the payment for the purchase order. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PurchaseOrderPaymentStatusEnum.html'>eBay API documentation</a>"
          },
          "purchaseOrderStatus": {
            "type": "string",
            "description": "An enumeration value that indicates the current status of the buyer's payment and any refund that applies to the purchase order. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PurchaseOrderStatusEnum.html'>eBay API documentation</a>"
          },
          "refundedAmount": {
            "description": "The total amount of any refunds for the purchase order.",
            "$ref": "#/components/schemas/Amount"
          },
          "warnings": {
            "type": "array",
            "description": "The container for any warning messages.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The type that defines the fields for the purchase order in a guest checkout."
      },
      "LegacyReference": {
        "type": "object",
        "properties": {
          "legacyItemId": {
            "type": "string",
            "description": "The legacy ID used to identify an item. This is used by the Post Order API Create Return Request call. This call initiates the item return process. For more information on how to use this field in the Post Order API, see Create a return request in the Buy Integration Guide. Restriction: The Post Order API can be used only with eBay member checkouts."
          },
          "legacyOrderId": {
            "type": "string",
            "description": "The legacy ID of the order. This is used by the Post Order API Submit Cancellation Request call. This call initiates the item cancellation process. For more information on how to use this field in the Post Order API, see Create a cancellation request. Restriction: The Post Order API can be used only with eBay member checkouts."
          },
          "legacyTransactionId": {
            "type": "string",
            "description": "The legacy ID of the transaction. This is used by the Post Order API Create Return Request call. This call initiates the item return process. For more information on how to use this field in the Post Order API, see Create a return request in the Buy Integration Guide. Restriction: The Post Order API can be used only with eBay member checkouts."
          }
        },
        "description": "Type that defines the fields to support using the Post Order API for returns and cancellations. Restriction: The Post Order API can be used only with eBay member checkouts."
      },
      "PaymentInstrument": {
        "type": "object",
        "properties": {
          "brand": {
            "description": "The name of the credit card company (brand).",
            "$ref": "#/components/schemas/PaymentMethodBrand"
          },
          "paymentMethodType": {
            "type": "string",
            "description": "An enumeration value that indicates the method of payment, such as credit card. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PaymentMethodTypeEnum.html'>eBay API documentation</a>"
          }
        },
        "description": "The type that defines the fields for the reference information about the payment method."
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "lineItems": {
            "type": "array",
            "description": "The type that defines the fields for the line items in the purchase order.",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "paymentInstrument": {
            "description": "List of payment methods that can be used for the purchase order. Currently only CREDIT_CARD is supported.",
            "$ref": "#/components/schemas/PaymentInstrument"
          },
          "pricingSummary": {
            "description": "The container for the details of the grand total of the order.",
            "$ref": "#/components/schemas/PricingSummary"
          },
          "purchaseOrderCreationDate": {
            "type": "string",
            "description": "This timestamp indicates the date and time when the purchase order was created."
          },
          "purchaseOrderId": {
            "type": "string",
            "description": "The unique identifier of the purchase order. This value was returned in the purchaseOrderId field by the placeOrder for a member and placeGuestOrder for a guest calls."
          },
          "purchaseOrderPaymentStatus": {
            "type": "string",
            "description": "An enumeration value that indicates the status of the payment for the purchase order. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PurchaseOrderPaymentStatusEnum.html'>eBay API documentation</a>"
          },
          "purchaseOrderStatus": {
            "type": "string",
            "description": "The container for the current status of the buyer's payment and any refund that applies to the purchase order. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/order/types/PurchaseOrderStatusEnum.html'>eBay API documentation</a>"
          },
          "refundedAmount": {
            "description": "Refund Amount for purchase order",
            "$ref": "#/components/schemas/Amount"
          },
          "shippingAddress": {
            "description": "The shipping address for the purchase order.",
            "$ref": "#/components/schemas/ShippingAddress"
          },
          "shippingFulfillments": {
            "type": "array",
            "description": "An array of the shipping providers and the purchase order delivery details.",
            "items": {
              "$ref": "#/components/schemas/ShippingFulfillment"
            }
          },
          "warnings": {
            "type": "array",
            "description": "An array of warning messages. These type of errors do not prevent the call from executing but should be checked.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "The type that defines the fields for a purchase order, including line items, costs and charges, payment method, and the purchase order status."
      },
      "ShippingDetail": {
        "type": "object",
        "properties": {
          "maxEstimatedDeliveryDate": {
            "type": "string",
            "description": "The end of the date range in which the purchase order is expected to be delivered to the shipping address."
          },
          "minEstimatedDeliveryDate": {
            "type": "string",
            "description": "The beginning of the date range in which the purchase order is expected to be delivered to the shipping address."
          },
          "shippingCarrierCode": {
            "type": "string",
            "description": "The shipping provider, such as FedEx, or USPS for the line item."
          },
          "shippingServiceCode": {
            "type": "string",
            "description": "A name of a shipping type. For example, Priority Mail Express (provided by USPS) or FedEx International Priority (Provided by FedEx)."
          }
        },
        "description": "The type that defines the fields for the shipping information, such as delivery date estimates and shipping provider."
      },
      "ShippingFulfillment": {
        "type": "object",
        "properties": {
          "actualDeliveryDate": {
            "type": "string",
            "description": "The date the purchase order was delivered."
          },
          "lineItemReferences": {
            "type": "array",
            "description": "Type the defines the fields for the line item ID and the quantity.",
            "items": {
              "$ref": "#/components/schemas/LineItemReference"
            }
          },
          "maxEstimatedDeliveryDate": {
            "type": "string",
            "description": "The end of the date range in which the purchase order is expected to be delivered to the shipping address."
          },
          "minEstimatedDeliveryDate": {
            "type": "string",
            "description": "The beginning of the date range in which the purchase order is expected to be delivered to the shipping address."
          },
          "shipmentTrackingNumber": {
            "type": "string",
            "description": "The shipping provider number associated with the purchase order that can be used to track the package."
          },
          "shipmentTrackingUrl": {
            "type": "string",
            "description": "The URL of the shipping provider's shipment tracking page."
          },
          "shippedDate": {
            "type": "string",
            "description": "The date the seller gave the purchase order to the shipping provider."
          },
          "shippingCarrierCode": {
            "type": "string",
            "description": "A name of the shipping provider, such as FedEx, or USPS."
          },
          "shippingServiceCode": {
            "type": "string",
            "description": "A name of a shipping type. For example, Priority Mail Express (provided by USPS) or FedEx International Priority (Provided by FedEx)."
          }
        },
        "description": "The type that defines the fields for the shipping details."
      }
    },
    "securitySchemes": {
      "api_auth": {
        "type": "oauth2",
        "description": "The security definitions for this API. Please check individual operations for applicable scopes.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.ebay.com/identity/v1/oauth2/token",
            "scopes": {
              "https://api.ebay.com/oauth/api_scope/buy.proxy.guest.order": "Allows 3rd Party premier branded proxy ",
              "https://api.ebay.com/oauth/api_scope/buy.guest.order": "Purchase eBay items off eBay"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://auth.ebay.com/oauth2/authorize",
            "tokenUrl": "https://api.ebay.com/identity/v1/oauth2/token",
            "scopes": {
              "https://api.ebay.com/oauth/api_scope/buy.order": "View and manage your purchases",
              "https://api.ebay.com/oauth/api_scope/buy.order.readonly": "View your order details"
            }
          }
        }
      }
    }
  }
}